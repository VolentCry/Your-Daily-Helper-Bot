# main.py
import asyncio
import logging
import os

from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message
from aiogram.client.default import DefaultBotProperties
from apscheduler.schedulers.asyncio import AsyncIOScheduler
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏
from modules import mood_tracker, weather, daily_words, daily_quotation

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
BOT_TOKEN = os.getenv("TOKEN")
# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ ADMIN_ID —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ —á–∏—Å–ª–æ
ADMIN_ID = int(os.getenv("ADMIN_ID"))

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ ---
async def main():
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, GMT+5)
    scheduler = AsyncIOScheduler(timezone="Asia/Yekaterinburg")

    # --- –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π ---
    dp.include_router(mood_tracker.router)
    dp.include_router(weather.router)
    dp.include_router(daily_words.router)
    dp.include_router(daily_quotation.router)

    @dp.message(CommandStart())
    async def send_welcome(message: Message):
        if message.from_user.id == ADMIN_ID:
            await message.answer(
                f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                "–Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                reply_markup=mood_tracker.get_main_menu_keyboard())
        else:
            await bot.send_message(message.from_user.id, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –±–æ—Ç–æ–º.")
        
    @dp.message(Command("menu"))
    async def command_menu(message: Message):
        await message.answer(
            "–ú–µ–Ω—é:",
            reply_markup=mood_tracker.get_main_menu_keyboard()
        )

    # --- –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ –±–æ—Ç–∞ ---
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
        await mood_tracker.schedule_jobs(scheduler, bot, ADMIN_ID)
        await weather.schedule_jobs(scheduler, bot, ADMIN_ID)
        await daily_words.schedule_jobs(scheduler, bot, ADMIN_ID)
        await daily_quotation.schedule_jobs(scheduler, bot, ADMIN_ID)
        
        scheduler.start()
        logger.info("–ó–∞–¥—á–∞–∏ –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
        
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("–ë–æ—Ç –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É...")
        await dp.start_polling(bot)

    except Exception as e:
        logger.error(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ –∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ {e}.")
    finally:
        logger.info("–ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω.")
        await bot.session.close()


if __name__ == '__main__':
    asyncio.run(main())